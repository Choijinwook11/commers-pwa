"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[44],{5044:(e,t,r)=>{r.d(t,{db:()=>o});class s{getCustomers(){try{let e=localStorage.getItem(this.customersKey);return e?JSON.parse(e):[]}catch(e){return console.error("Failed to load customers:",e),[]}}saveCustomers(e){try{localStorage.setItem(this.customersKey,JSON.stringify(e))}catch(e){console.error("Failed to save customers:",e)}}getRecords(){try{let e=localStorage.getItem(this.recordsKey);return e?JSON.parse(e):[]}catch(e){return console.error("Failed to load records:",e),[]}}saveRecords(e){try{localStorage.setItem(this.recordsKey,JSON.stringify(e))}catch(e){console.error("Failed to save records:",e)}}async init(){return!0}async getAllCustomers(){return this.getCustomers()}async getCustomer(e){return this.getCustomers().find(t=>t.id===e)}async saveCustomer(e){let t=this.getCustomers(),r=e.id||this.generateId(),s={...e,id:r,updatedAt:new Date().toISOString(),createdAt:e.createdAt||new Date().toISOString()},o=t.findIndex(e=>e.id===r);return o>=0?t[o]=s:t.push(s),this.saveCustomers(t),r}async deleteCustomer(e){let t=this.getCustomers().filter(t=>t.id!==e);this.saveCustomers(t);let r=this.getRecords().filter(t=>t.customerId!==e);this.saveRecords(r)}async getCustomerRecords(e){return this.getRecords().filter(t=>t.customerId===e)}async saveRecord(e){let t=this.getRecords(),r=e.id||this.generateId(),s={...e,id:r,createdAt:new Date().toISOString()},o=t.findIndex(e=>e.id===r);return o>=0?t[o]=s:t.push(s),this.saveRecords(t),r}async deleteRecord(e){let t=this.getRecords().filter(t=>t.id!==e);this.saveRecords(t)}async searchCustomers(e){return this.getCustomers().filter(t=>{var r;return t.name.toLowerCase().includes(e.toLowerCase())||t.phone.includes(e)||(null==(r=t.email)?void 0:r.toLowerCase().includes(e.toLowerCase()))})}generateId(){return Date.now().toString(36)+Math.random().toString(36).substr(2)}exportData(){return JSON.stringify({customers:this.getCustomers(),records:this.getRecords(),exportDate:new Date().toISOString()})}importData(e){try{let t=JSON.parse(e);return t.customers&&Array.isArray(t.customers)&&this.saveCustomers(t.customers),t.records&&Array.isArray(t.records)&&this.saveRecords(t.records),!0}catch(e){return console.error("Failed to import data:",e),!1}}constructor(){this.customersKey="commers-customers",this.recordsKey="commers-records"}}let o=new s}}]);